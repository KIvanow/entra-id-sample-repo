"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GLOBAL = exports.testUtils = void 0;
const authx_1 = require("@redis/client/dist/lib/authx");
const test_utils_1 = __importDefault(require("@redis/test-utils"));
const entraid_credentials_provider_1 = require("./entraid-credentials-provider");
exports.testUtils = new test_utils_1.default({
    dockerImageName: 'redis/redis-stack',
    dockerImageVersionArgument: 'redis-version',
    defaultDockerVersion: '7.4.0-v1'
});
const DEBUG_MODE_ARGS = exports.testUtils.isVersionGreaterThan([7]) ?
    ['--enable-debug-command', 'yes'] :
    [];
const idp = {
    requestToken() {
        // @ts-ignore
        return Promise.resolve({
            ttlMs: 100000,
            token: {
                accessToken: 'password'
            }
        });
    }
};
const tokenManager = new authx_1.TokenManager(idp, { expirationRefreshRatio: 0.8 });
const entraIdCredentialsProvider = new entraid_credentials_provider_1.EntraidCredentialsProvider(tokenManager, idp);
const PASSWORD_WITH_REPLICAS = {
    serverArguments: ['--requirepass', 'password', ...DEBUG_MODE_ARGS],
    numberOfMasters: 2,
    numberOfReplicas: 1,
    clusterConfiguration: {
        defaults: {
            credentialsProvider: entraIdCredentialsProvider
        }
    }
};
exports.GLOBAL = {
    CLUSTERS: {
        PASSWORD_WITH_REPLICAS
    }
};
//# sourceMappingURL=test-utils.js.map